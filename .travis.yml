dist: xenial

sudo: required

language: python

python: 3.7

env:
  global:
    - DB_PASSWORD=
    - DB_USER=postgres
    - SECRET_KEY=dummy

jobs:
  include:
    - stage: Django tests
      services:
        - postgresql
      addons:
        postgresql: "10"
        apt:
          packages:
          - postgresql-10-postgis-2.4
      env:
        - DJANGO_SETTINGS_MODULE=openzaak.conf.test
      before_install:
        - sudo apt-get update
        - sudo apt-get install libgdal-dev gdal-bin
        - gdal-config --version
      install:
        - pip install -r requirements/test.txt
        - pip install codecov
        - npm ci
        - npm run build
      before_script:
        - psql -U postgres -c "create extension postgis"
      script:
        - python src/manage.py collectstatic --noinput --link
        - coverage run src/manage.py test src
      after_success:
        - codecov

    - name: isort
      install: pip install isort
      script: isort --recursive --check-only --diff .

    - name: black
      install: pip install black
      script: black --check src

    - name: Test docker image build
      before_install: skip
      install: skip
      before_script: skip
      script: docker build .

    - stage: Newman tests
      install:
        - npm install newman
      script:
        - docker-compose -f docker-compose-travis.yml up -d
        - bin/postman_tests_ngrok.sh
      after_script:
        - docker-compose stop
        - docker-compose rm -f
